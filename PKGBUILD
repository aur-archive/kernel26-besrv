# Maintainer: BlackEagle < ike DOT devolder AT gmail DOT com >
# Contributor: Tobias Powalowski <tpowa@archlinux.org>
# Contributor: Thomas Baechler <thomas@archlinux.org>
pkgbase="kernel26-besrv"
pkgname='kernel26-besrv'
true && pkgname=('kernel26-besrv' 'kernel26-besrv-headers')
# pkgname=kernel26-custom       # Build kernel with a different name
_kernelname=-besrv
_basekernel=2.6.35
_patchver=13
pkgver=${_basekernel}
pkgrel=2
arch=('i686' 'x86_64')
license=('GPL2')
url="http://www.kernel.org"
options=(!strip)
source=("ftp://ftp.kernel.org/pub/linux/kernel/v2.6/linux-$_basekernel.tar.bz2"
		# the main kernel config files
		"config-${_basekernel}.i686"
		"config-${_basekernel}.x86_64"
		# standard config files for mkinitcpio ramdisk
		"kernel26-besrv.preset"
)
sha256sums=(
	'18b2e2c336032e366c942622b77302cb05fc034fb19018f086a4ebc9ed41bfcf'
	'7a9b092a12348619aa01aa424b79d3a6220ffe566c2a0aa6834bb6e87600b05d'
	'8eebb7ef92d48db11aa5992dfcee978b4e81816ca7155239586323b0e2ad5874'
	'c8bebfaf9238c2e061f7322e3488e3ef8a11855ab70c89a4b56e4f0d98fe80da'
)
if [ ${_patchver} -ne 0 ]; then
	pkgver=${_basekernel}.${_patchver}
	_patchname="patch-${pkgver}"
	source=( "${source[@]}"
		"http://www.kernel.org/pub/linux/kernel/v2.6/longterm/v${_basekernel}/${_patchname}.bz2"
	)
	sha256sums=( "${sha256sums[@]}"
		"85449bf5b3211ff3bf4570fc63a2a4cc45d9685868c3566225de2fe979d52053"
	)
fi
# extra patches
_extrapatches=(
)
_extrapatchessums=(
)
if [ ${#_extrapatches[@]} -ne 0 ]; then
	source=( "${source[@]}"
		"${_extrapatches[@]}"
	)
	sha256sums=( "${sha256sums[@]}"
		"${_extrapatchessums[@]}"
	)
fi
# some stuff for the AUR parser :p
if [ "aur" == "there" ]; then
	source=("ftp://ftp.kernel.org/pub/linux/kernel/v2.6/linux-$_basekernel.tar.bz2"
			"config-${_basekernel}.i686"
			"config-${_basekernel}.x86_64"
			"kernel26-besrv.preset"
	)
fi

build() {
	cd ${srcdir}/linux-$_basekernel
	# Add revision patches
	if [ ${_patchver} -ne 0 ]; then
		msg2 "apply ${_patchname}"
		patch -Np1 -i ${srcdir}/${_patchname}
	fi

	# extra patches
	for patch in ${_extrapatches[@]}; do
		msg2 "apply ${patch}"
		patch -Np1 -i ${srcdir}/${patch}
	done

	if [ "$CARCH" = "x86_64" ]; then
		cat ../config-${_basekernel}.x86_64 >./.config
	else
		cat ../config-${_basekernel}.i686 >./.config
	fi
	if [ "${_kernelname}" != "" ]; then
		sed -i "s|CONFIG_LOCALVERSION=.*|CONFIG_LOCALVERSION=\"\U${_kernelname}\"|g" ./.config
	fi
	sed -i -e 's/^EXTRAVERSION =.*/EXTRAVERSION =/' ./Makefile

	# hack to prevent output kernel from being marked as dirty or git
	echo "" > ${srcdir}/linux-${_basekernel}/.scmversion

	# get kernel version
	make prepare
	# load configuration
	# Configure the kernel. Replace the line below with one of your choice.
	#make menuconfig # CLI menu for configuration
	#make xconfig # X-based configuration
	#make oldconfig # using old config from previous kernel version
	# ... or manually edit .config
	####################
	# stop here
	# this is useful to configure the kernel
	#msg "Stopping build"
	#return 1
	####################
	# yes "" | make config
	# build!
	make bzImage modules
}

package_kernel26-besrv() {
	pkgdesc="The Linux Kernel and modules, BlackEagle Server Edition"
	groups=('base')
	provides=('kernel26')
	backup=(etc/mkinitcpio.d/${pkgname}.preset)
	depends=('coreutils' 'module-init-tools>=3.12-2' 'mkinitcpio>=0.6.8')
	install=${pkgname}.install
	optdepends=(
		'crda: to set the correct wireless channels of your country'
		'linux-firmware: when having some hardware needing special firmware'
	)

	KARCH=x86
	cd ${srcdir}/linux-$_basekernel

	mkdir -p ${pkgdir}/{lib/modules,lib/firmware,boot}

	# get kernel version
	_kernver="$(make kernelrelease)"
	make INSTALL_MOD_STRIP=1 INSTALL_MOD_PATH=${pkgdir} modules_install
	cp System.map ${pkgdir}/boot/System.map26${_kernelname}
	cp arch/$KARCH/boot/bzImage ${pkgdir}/boot/vmlinuz26${_kernelname}

	# install fallback mkinitcpio.conf file and preset file for kernel
	install -m644 -D ${srcdir}/${pkgname}.preset ${pkgdir}/etc/mkinitcpio.d/${pkgname}.preset

	# set correct depmod command for install
	sed \
		-e  "s/KERNEL_NAME=.*/KERNEL_NAME=${_kernelname}/g" \
		-e  "s/KERNEL_VERSION=.*/KERNEL_VERSION=${_kernver}/g" \
		-i $startdir/${pkgname}.install
	sed \
		-e "s|source .*|source /etc/mkinitcpio.d/kernel26${_kernelname}.kver|g" \
		-e "s|default_image=.*|default_image=\"/boot/${pkgname}.img\"|g" \
		-e "s|fallback_image=.*|fallback_image=\"/boot/${pkgname}-fallback.img\"|g" \
		-i ${pkgdir}/etc/mkinitcpio.d/${pkgname}.preset

	echo -e "# DO NOT EDIT THIS FILE\nALL_kver='${_kernver}'" > ${pkgdir}/etc/mkinitcpio.d/${pkgname}.kver

	# remove build and source links
	rm -f ${pkgdir}/lib/modules/${_kernver}/{source,build}

	# remove the firmware
	rm -rf ${pkgdir}/lib/firmware

	# gzip all modules
	find ${pkgdir} -name '*.ko' -exec gzip -9 {} \;
}

package_kernel26-besrv-headers() {
	pkgdesc="Header files and scripts for building modules for kernel26-besrv"
	provides=('kernel26-headers')
	mkdir -p ${pkgdir}/lib/modules/${_kernver}
	cd ${pkgdir}/lib/modules/${_kernver}
	ln -sf ../../../usr/src/linux-${_kernver} build
	cd ${srcdir}/linux-$_basekernel
	install -D -m644 Makefile \
		${pkgdir}/usr/src/linux-${_kernver}/Makefile
	install -D -m644 kernel/Makefile \
		${pkgdir}/usr/src/linux-${_kernver}/kernel/Makefile
	install -D -m644 .config \
		${pkgdir}/usr/src/linux-${_kernver}/.config

	# copy files necessary for later builds, like nvidia and vmware
	cp Module.symvers ${pkgdir}/usr/src/linux-${_kernver}
	cp -a scripts ${pkgdir}/usr/src/linux-${_kernver}
	# fix permissions on scripts dir
	chmod og-w -R ${pkgdir}/usr/src/linux-${_kernver}/scripts
	mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/.tmp_versions

	mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/arch/$KARCH/kernel

	cp arch/$KARCH/Makefile ${pkgdir}/usr/src/linux-${_kernver}/arch/$KARCH/
	if [ "$CARCH" = "i686" ]; then
		cp arch/$KARCH/Makefile_32.cpu ${pkgdir}/usr/src/linux-${_kernver}/arch/$KARCH/
	fi
	cp arch/$KARCH/kernel/asm-offsets.s ${pkgdir}/usr/src/linux-${_kernver}/arch/$KARCH/kernel/

	# add docbook makefile
	install -D -m644 Documentation/DocBook/Makefile \
		${pkgdir}/usr/src/linux-${_kernver}/Documentation/DocBook/Makefile

	# add config
	for config in `find ./include/config -size +1c -type f`; do
		mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/$(dirname ${config})
		cp -a ${config} ${pkgdir}/usr/src/linux-${_kernver}/$(dirname ${config})
	done

	# add headers
	for header in `find -size +1c -name '*.h'`; do
		mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/$(dirname ${header})
		cp -a ${header} ${pkgdir}/usr/src/linux-${_kernver}/$(dirname ${header})
	done

	# copy in Kconfig files
	for i in `find . -name "Kconfig*"`; do
		mkdir -p ${pkgdir}/usr/src/linux-${_kernver}/`echo $i | sed 's|/Kconfig.*||'`
		cp $i ${pkgdir}/usr/src/linux-${_kernver}/$i
	done

	chown -R root.root ${pkgdir}/usr/src/linux-${_kernver}
	find ${pkgdir}/usr/src/linux-${_kernver} -type d -exec chmod 755 {} \;
	# remove unneeded architectures
	rm -rf ${pkgdir}/usr/src/linux-${_kernver}/arch/{alpha,arm,arm26,avr32,blackfin,cris,frv,h8300,ia64,m32r,m68k,m68knommu,mips,microblaze,mn10300,parisc,powerpc,ppc,s390,score,sh,sh64,sparc,sparc64,tile,um,v850,xtensa}
}
pkgdesc="The Linux Kernel and modules, BlackEagle Server Edition"
